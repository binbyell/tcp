// Generated by view binder compiler. Do not edit!
package com.hg.esp_tcp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hg.esp_tcp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NoticeItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView noticeItemBackground;

  @NonNull
  public final ImageView noticeItemIcon;

  @NonNull
  public final TextView noticeItemNode;

  @NonNull
  public final TextView noticeItemTime;

  @NonNull
  public final TextView noticeItemValue;

  @NonNull
  public final TextView noticeItemWarnText;

  private NoticeItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView noticeItemBackground, @NonNull ImageView noticeItemIcon,
      @NonNull TextView noticeItemNode, @NonNull TextView noticeItemTime,
      @NonNull TextView noticeItemValue, @NonNull TextView noticeItemWarnText) {
    this.rootView = rootView;
    this.noticeItemBackground = noticeItemBackground;
    this.noticeItemIcon = noticeItemIcon;
    this.noticeItemNode = noticeItemNode;
    this.noticeItemTime = noticeItemTime;
    this.noticeItemValue = noticeItemValue;
    this.noticeItemWarnText = noticeItemWarnText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoticeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoticeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notice_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoticeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notice_item_background;
      ImageView noticeItemBackground = ViewBindings.findChildViewById(rootView, id);
      if (noticeItemBackground == null) {
        break missingId;
      }

      id = R.id.notice_item_icon;
      ImageView noticeItemIcon = ViewBindings.findChildViewById(rootView, id);
      if (noticeItemIcon == null) {
        break missingId;
      }

      id = R.id.notice_item_node;
      TextView noticeItemNode = ViewBindings.findChildViewById(rootView, id);
      if (noticeItemNode == null) {
        break missingId;
      }

      id = R.id.notice_item_time;
      TextView noticeItemTime = ViewBindings.findChildViewById(rootView, id);
      if (noticeItemTime == null) {
        break missingId;
      }

      id = R.id.notice_item_value;
      TextView noticeItemValue = ViewBindings.findChildViewById(rootView, id);
      if (noticeItemValue == null) {
        break missingId;
      }

      id = R.id.notice_item_warn_text;
      TextView noticeItemWarnText = ViewBindings.findChildViewById(rootView, id);
      if (noticeItemWarnText == null) {
        break missingId;
      }

      return new NoticeItemBinding((ConstraintLayout) rootView, noticeItemBackground,
          noticeItemIcon, noticeItemNode, noticeItemTime, noticeItemValue, noticeItemWarnText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
